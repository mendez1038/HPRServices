package com.david.training.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.david.training.dao.CategoriaDAO;
import com.david.training.dao.util.ConnectionManager;
import com.david.training.dao.util.JDBCUtils;
import com.david.training.exceptions.DataException;
import com.david.training.model.Categoria;

public class CategoriaDAOImpl implements CategoriaDAO{

public CategoriaDAOImpl() {
		
	}
	
	public Categoria findById(Integer id)
		throws Exception {
			
		Categoria ca = null;
		
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		
		try {
			connection = ConnectionManager.getConnection();

			String sql;
			sql =  "SELECT ID_CATEGORIA, NOMBRE_CATEGORIA "
				  +"FROM CATEGORIA "
				  +"WHERE ID_CATEGORIA = ? ";
			
			System.out.println("Creating statement...");
			preparedStatement = connection.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
			
			
			int i = 1;
			preparedStatement.setInt(i++, id);
			
			resultSet = preparedStatement.executeQuery();
			
			if (resultSet.next()) {
				ca = loadNext(resultSet);
			} else {
				throw new Exception("No se encontró categoria"+id);			
		} 
		if (resultSet.next()) {
			throw new Exception("Categoria"+id+"duplicada");
		}
		} catch (SQLException ex) {
			throw new DataException(ex);
		} finally { 
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);
			JDBCUtils.closeConnection(connection);
		}
			return ca;
		}
			
				
		public Categoria create(Categoria ca)
				throws Exception {
			Connection connection = null; 
			PreparedStatement preparedStatement = null;
			ResultSet resultSet = null;
			try {          

				connection = ConnectionManager.getConnection();
				//Check if the primary key already exists
//				if (exists(connection, e.getId())) {
//					throw new Exception("Duplicate employee "+e.getId());
//				}
					
				String queryString = "INSERT INTO CATEGORIA(ID_CATEGORIA, NOMBRE_CATEGORIA) "
						+ "VALUES (?, ?)";

				preparedStatement = connection.prepareStatement(queryString, Statement.RETURN_GENERATED_KEYS);
				
				int i = 1;     			
				preparedStatement.setInt(i++, ca.getIdCategoria());
				preparedStatement.setString(i++, ca.getNombreCategoria());
							

				int insertedRows = preparedStatement.executeUpdate();

				if (insertedRows == 0) {
					throw new SQLException("Can not add row to table 'Categoria'");
				}
				
				resultSet = preparedStatement.getGeneratedKeys();
				if (resultSet.next()) {
					 Integer idCategoria = resultSet.getInt(1);
					 ca.setIdCategoria(idCategoria);				
				} else {
					throw new DataException("Unable to fetch autogenerated primary key");
				}

				
				//...
				return ca;					

			} catch (SQLException ex) {
				throw new DataException(ex);
			} finally {
				JDBCUtils.closeResultSet(resultSet);
				JDBCUtils.closeStatement(preparedStatement);			
				JDBCUtils.closeConnection(connection);
			}
			
		}
		public boolean update (Categoria ca)
				throws Exception {
			return false;
		}
		
		private Categoria loadNext(ResultSet resultSet) throws Exception {
			Categoria ca = new Categoria();
			int i = 1;
			
			String nombreCategoria = resultSet.getString(i++);
			
			ca = new Categoria();
			
			
			ca.setNombreCategoria(nombreCategoria);
			
			return ca;
		}

	

		@Override
		public Categoria findAll() throws Exception {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public Categoria testCreate(Categoria c) throws Exception {
			// TODO Auto-generated method stub
			return null;
		}
}
